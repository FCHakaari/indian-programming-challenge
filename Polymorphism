–ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º ‚Äî —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–æ–≤ —Å –æ–¥–Ω–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –∏–º–µ—Ç—å —Ä–∞–∑–Ω—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é. –í C# –æ–Ω —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —á–µ—Ä–µ–∑:

    - –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ (override, virtual, abstract)
    - –ü–µ—Ä–µ–≥—Ä—É–∑–∫—É –º–µ—Ç–æ–¥–æ–≤ (—Ä–∞–∑–Ω—ã–µ —Å–∏–≥–Ω–∞—Ç—É—Ä—ã)
    - –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã (—Ä–∞–∑–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–¥–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞)

1. –í–∏–¥—ã –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–∞
	1.1. Ad-hoc –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º (–ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –º–µ—Ç–æ–¥–æ–≤)

		–û–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –º–µ—Ç–æ–¥ –∏–º–µ–µ—Ç —Ä–∞–∑–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
		csharp

		class Calculator
		{
		    // –ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –º–µ—Ç–æ–¥–∞ Add
		    public int Add(int a, int b) => a + b;
		    public double Add(double a, double b) => a + b;
		    public string Add(string a, string b) => a + b;
		}

		var calc = new Calculator();
		Console.WriteLine(calc.Add(2, 3));       // 5 (int)
		Console.WriteLine(calc.Add(2.5, 3.5));   // 6.0 (double)
		Console.WriteLine(calc.Add("Hello", " World")); // "Hello World" (string)

		–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å? –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–¥–Ω—É –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö.
	
	1.2. –ü–∞—Ä–∞–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º (–æ–±–æ–±—â–µ–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, generics)

	–û–¥–∏–Ω –º–µ—Ç–æ–¥ –∏–ª–∏ –∫–ª–∞—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞.
	csharp

	class Box<T>
	{
	    public T Content { get; set; }
	}

	var intBox = new Box<int> { Content = 123 };
	var stringBox = new Box<string> { Content = "Hello" };

	‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å? –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π (List<T>, Dictionary<K,V>) –∏ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤.
	3. –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º –ø–æ–¥—Ç–∏–ø–æ–≤ (–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ + –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤)

	–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∞ –¥–æ—á–µ—Ä–Ω–∏–µ –∫–ª–∞—Å—Å—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç —Å–≤–æ—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é.
	–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:

	    virtual ‚Äî –º–µ—Ç–æ–¥ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å.

	    override ‚Äî –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞.

	    abstract ‚Äî –º–µ—Ç–æ–¥ –æ–±—è–∑–∞–Ω –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω.

	csharp

	abstract class Animal
	{
	    public abstract void MakeSound(); // –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è)
	    
	    public virtual void Sleep()       // –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å)
	    {
		Console.WriteLine("Zzz...");
	    }
	}

	class Dog : Animal
	{
	    public override void MakeSound() => Console.WriteLine("Woof!");
	    public override void Sleep() => Console.WriteLine("Dog is sleeping...");
	}

	class Cat : Animal
	{
	    public override void MakeSound() => Console.WriteLine("Meow!");
	    // Sleep() –Ω–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∞–∑–æ–≤–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
	}

	Animal dog = new Dog();
	dog.MakeSound(); // Woof!
	dog.Sleep();     // Dog is sleeping...

	Animal cat = new Cat();
	cat.MakeSound(); // Meow!
	cat.Sleep();     // Zzz... (–±–∞–∑–æ–≤–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)

	‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å? –ö–æ–≥–¥–∞ —Ä–∞–∑–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–¥–Ω–∏ –∏ —Ç–µ –∂–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ-—Ä–∞–∑–Ω–æ–º—É.
	4. –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã

	–ù–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∞—Å—Å–æ–≤ —Ä–µ–∞–ª–∏–∑—É—é—Ç –æ–¥–∏–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –Ω–æ –∫–∞–∂–¥—ã–π –ø–æ-—Å–≤–æ–µ–º—É.
	csharp

	interface IDrawable
	{
	    void Draw();
	}

	class Circle : IDrawable
	{
	    public void Draw() => Console.WriteLine("Drawing a circle");
	}

	class Square : IDrawable
	{
	    public void Draw() => Console.WriteLine("Drawing a square");
	}

	IDrawable[] shapes = { new Circle(), new Square() };
	foreach (var shape in shapes)
	    shape.Draw(); // –í—ã–∑–æ–≤–µ—Ç—Å—è —Ä–∞–∑–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è

	‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å? –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ –∫–ª–∞—Å—Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ.
	üîπ 2. –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –≤–∏–¥–∞–º–∏ –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–∞
	–í–∏–¥	–ö–∞–∫ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è	–ü—Ä–∏–º–µ—Ä	–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?
	Ad-hoc (–ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞)	–†–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å –æ–¥–Ω–∏–º –∏–º–µ–Ω–µ–º	Add(int a, int b) vs Add(double a, double b)	–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
	–ü–∞—Ä–∞–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π (generics)	–û–±–æ–±—â–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã (T)	List<T>, Box<T>	–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã
	–ü–æ–¥—Ç–∏–ø–æ–≤ (–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ)	virtual/override/abstract	Animal ‚Üí Dog, Cat	–û–±—â–∞—è –ª–æ–≥–∏–∫–∞ —Å —Ä–∞–∑–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π
	–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å–Ω—ã–π	–ö–ª–∞—Å—Å—ã —Ä–µ–∞–ª–∏–∑—É—é—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å	IDrawable ‚Üí Circle, Square
